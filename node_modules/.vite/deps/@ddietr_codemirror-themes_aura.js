import {
  HighlightStyle,
  syntaxHighlighting,
  tags
} from "./chunk-BTXHKQ6A.js";
import {
  EditorView
} from "./chunk-72O24AXP.js";
import "./chunk-3BHLKIA4.js";
import "./chunk-E2JEHENU.js";

// node_modules/@ddietr/codemirror-themes/dist/theme/aura.js
var config = {
  name: "aura",
  dark: true,
  background: "#21202e",
  foreground: "#edecee",
  selection: "#3d375e7f",
  cursor: "#a277ff",
  dropdownBackground: "#21202e",
  dropdownBorder: "#3b334b",
  activeLine: "#4d4b6622",
  matchingBracket: "#a394f033",
  keyword: "#a277ff",
  storage: "#a277ff",
  variable: "#edecee",
  parameter: "#edecee",
  function: "#ffca85",
  string: "#61ffca",
  constant: "#61ffca",
  type: "#82e2ff",
  class: "#82e2ff",
  number: "#61ffca",
  comment: "#6d6d6d",
  heading: "#a277ff",
  invalid: "#ff6767",
  regexp: "#61ffca"
};
var auraTheme = EditorView.theme({
  "&": {
    color: config.foreground,
    backgroundColor: config.background
  },
  ".cm-content": { caretColor: config.cursor },
  ".cm-cursor, .cm-dropCursor": { borderLeftColor: config.cursor },
  "&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection": { backgroundColor: config.selection },
  ".cm-panels": { backgroundColor: config.dropdownBackground, color: config.foreground },
  ".cm-panels.cm-panels-top": { borderBottom: "2px solid black" },
  ".cm-panels.cm-panels-bottom": { borderTop: "2px solid black" },
  ".cm-searchMatch": {
    backgroundColor: config.dropdownBackground,
    outline: `1px solid ${config.dropdownBorder}`
  },
  ".cm-searchMatch.cm-searchMatch-selected": {
    backgroundColor: config.selection
  },
  ".cm-activeLine": { backgroundColor: config.activeLine },
  ".cm-selectionMatch": { backgroundColor: config.selection },
  "&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket": {
    backgroundColor: config.matchingBracket,
    outline: "none"
  },
  ".cm-gutters": {
    backgroundColor: config.background,
    color: config.foreground,
    border: "none"
  },
  ".cm-activeLineGutter": { backgroundColor: config.background },
  ".cm-foldPlaceholder": {
    backgroundColor: "transparent",
    border: "none",
    color: config.foreground
  },
  ".cm-tooltip": {
    border: `1px solid ${config.dropdownBorder}`,
    backgroundColor: config.dropdownBackground,
    color: config.foreground
  },
  ".cm-tooltip .cm-tooltip-arrow:before": {
    borderTopColor: "transparent",
    borderBottomColor: "transparent"
  },
  ".cm-tooltip .cm-tooltip-arrow:after": {
    borderTopColor: config.foreground,
    borderBottomColor: config.foreground
  },
  ".cm-tooltip-autocomplete": {
    "& > ul > li[aria-selected]": {
      background: config.selection,
      color: config.foreground
    }
  }
}, { dark: config.dark });
var auraHighlightStyle = HighlightStyle.define([
  { tag: tags.keyword, color: config.keyword },
  { tag: [tags.name, tags.deleted, tags.character, tags.macroName], color: config.variable },
  { tag: [tags.propertyName], color: config.function },
  { tag: [tags.processingInstruction, tags.string, tags.inserted, tags.special(tags.string)], color: config.string },
  { tag: [tags.function(tags.variableName), tags.labelName], color: config.function },
  { tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)], color: config.constant },
  { tag: [tags.definition(tags.name), tags.separator], color: config.variable },
  { tag: [tags.className], color: config.class },
  { tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace], color: config.number },
  { tag: [tags.typeName], color: config.type, fontStyle: config.type },
  { tag: [tags.operator, tags.operatorKeyword], color: config.keyword },
  { tag: [tags.url, tags.escape, tags.regexp, tags.link], color: config.regexp },
  { tag: [tags.meta, tags.comment], color: config.comment },
  { tag: tags.strong, fontWeight: "bold" },
  { tag: tags.emphasis, fontStyle: "italic" },
  { tag: tags.link, textDecoration: "underline" },
  { tag: tags.heading, fontWeight: "bold", color: config.heading },
  { tag: [tags.atom, tags.bool, tags.special(tags.variableName)], color: config.variable },
  { tag: tags.invalid, color: config.invalid },
  { tag: tags.strikethrough, textDecoration: "line-through" }
]);
var aura = [
  auraTheme,
  syntaxHighlighting(auraHighlightStyle)
];
export {
  aura,
  auraHighlightStyle,
  auraTheme,
  config
};
//# sourceMappingURL=@ddietr_codemirror-themes_aura.js.map
